$BREAKPOINTS: (
  medium-screens: 750px,
  large-screens: 1106px,
);

$BREAKPOINT_INCREMENTS: (
  px: 1px,
  vw: 1vw
);

@function breakpoint-value-for($breakpoint) {
  @return map-get($BREAKPOINTS, $breakpoint);
}

@function breakpoint-clean-value($point) {
  @if type-of($point) == number {
    @return $point;
  }

  @return breakpoint-value-for($point);
}

@function breakpoint-increment-for($value) {
  @return map-get($BREAKPOINT_INCREMENTS, unit($value));
}

@function breakpoint-adjusted-for-inclusivity($value, $min-or-max, $inclusive: false) {
  $value: breakpoint-clean-value($value);

  @if not $inclusive {
    @if $min-or-max == min {
      $value: $value + breakpoint-increment-for($value);
    } @else {
      $value: $value - breakpoint-increment-for($value);
    }
  }

  @return "(#{$min-or-max}-width: #{$value})";
}

@mixin breakpoint-after($point) {
  @media screen and #{breakpoint-adjusted-for-inclusivity($point, min)} {
    @content;
  }
}

@mixin after($point) { @include breakpoint-after($point) { @content; } }

@mixin breakpoint-before($point) {
  @media screen and #{breakpoint-adjusted-for-inclusivity($point, max)} {
    @content;
  }
}

@mixin before($point) { @include breakpoint-before($point) { @content; } }
